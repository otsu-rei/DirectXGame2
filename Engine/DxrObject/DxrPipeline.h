#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
// directX
#include <d3d12.h>
#include <dxgi1_6.h>

// c++
#include <cstdint>

// ComPtr
#include <ComPtr.h>

//-----------------------------------------------------------------------------------------
// comment
//-----------------------------------------------------------------------------------------
#pragma comment(lib, "d3d12.lib")
#pragma comment(lib, "dxgi.lib")

////////////////////////////////////////////////////////////////////////////////////////////
// DxrObject namespace
////////////////////////////////////////////////////////////////////////////////////////////
namespace DxrObject {

	//-----------------------------------------------------------------------------------------
	// forward
	//-----------------------------------------------------------------------------------------
	class Devices;

	////////////////////////////////////////////////////////////////////////////////////////////
	// GlobalRootSignature class
	////////////////////////////////////////////////////////////////////////////////////////////
	class GlobalRootSignature {
	public:

		//=========================================================================================
		// public methods
		//=========================================================================================

		GlobalRootSignature(Devices* devices) { Init(devices); }

		~GlobalRootSignature() { Term(); }

		void Init(Devices* devices);

		void Term();

	private:

		//=========================================================================================
		// private variables
		//=========================================================================================
		

		ComPtr<ID3D12RootSignature> globalRootSignature_;
		ComPtr<ID3D12RootSignature> localRootSignature_; //!< rayGeneration

	};

}